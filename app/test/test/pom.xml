<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jbundle.app.test</groupId>
    <artifactId>jbundle-app-test-reactor</artifactId>
    <version>1.0.8</version>
  </parent>

  <artifactId>org.jbundle.app.test.test</artifactId>
  <packaging>bundle</packaging>
  <name>jbundle-app-test-test - Test code</name>

  <properties>
  <!-- Note: The tests won't run in maven because I can't figure out how to pass these arguments to the surefire plugin:
   -Dremotehost=localhost -Dcodebase=localhost:8181/ -->
    <maven.test.skip>true</maven.test.skip>  <!-- TODO Need to add a profile that will run this on the build server (ie if jdbc.url exists) -->
  </properties>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Export-Package>
                ${project.artifactId}.screen.*;version=${project.version},
                ${project.artifactId}.db.analysis.*;version=${project.version},
		org.jbundle.app.test.vet.screen.*;version=${project.version},
		org.jbundle.app.test.vet.remote.*;version=${project.version},
		org.jbundle.app.test.vet.shared.report.*;version=${project.version},
		org.jbundle.app.test.vet.shared.screen.*;version=${project.version},
		org.jbundle.app.test.vet.shared.xml.*;version=${project.version},
            </Export-Package>
            <Import-Package>
                *;resolution:=optional,
                org.jbundle.res.app.test.*;version=${project.version}
            </Import-Package>
            <Bundle-Version>${project.version}</Bundle-Version>
          </instructions>
        </configuration>
      </plugin>
    </plugins> 
    <resources>
      <resource>
        <directory>${basedir}/src/main/java</directory>
        <includes>
         <include>**/*.properties</include>
        </includes>
        <filtering>false</filtering>
      </resource>
    </resources>

  </build>

  <dependencies>
    <dependency>
      <groupId>org.jbundle.app.test</groupId>
      <artifactId>org.jbundle.model.app.test</artifactId>
      <version>${jbundle-version-range}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
	<dependency>
	  <groupId>log4j</groupId>
	  <artifactId>log4j</artifactId>
	  <scope>test</scope>
	</dependency>

    <dependency>
      <groupId>org.jbundle.app.test</groupId>
      <artifactId>org.jbundle.app.test.db</artifactId>
      <version>${jbundle-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.jbundle.config.dep</groupId>
      <artifactId>jbundle-config-dep-main</artifactId>
      <version>${jbundle-version-range}</version>
	  <type>pom</type>
    </dependency>
    <dependency>
      <groupId>org.jbundle.util.calendarpanel</groupId>
      <artifactId>org.jbundle.util.calendarpanel</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbundle.thin.base.screen</groupId>
      <artifactId>org.jbundle.thin.base.screen.cal.other</artifactId>
      <version>${jbundle-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.jbundle.thin.base.screen</groupId>
      <artifactId>org.jbundle.thin.base.screen.cal.grid</artifactId>
      <version>${jbundle-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.jbundle.util.wsdl</groupId>
      <artifactId>org.jbundle.util.wsdl.xmlschema</artifactId>
      <version>${jbundle-util-wsdl-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.jbundle.util.wsdl</groupId>
      <artifactId>org.jbundle.util.wsdl.wsdl11</artifactId>
      <version>${jbundle-util-wsdl-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.jbundle.util.wsdl</groupId>
      <artifactId>org.jbundle.util.wsdl.wsdl20</artifactId>
      <version>${jbundle-util-wsdl-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.jbundle.thin.main</groupId>
      <artifactId>org.jbundle.thin.main</artifactId>
      <version>${jbundle-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jbundle.app.test</groupId>
      <artifactId>org.jbundle.thin.app.test</artifactId>
      <version>${jbundle-version-range}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jbundle.base</groupId>
      <artifactId>org.jbundle.base</artifactId>
      <version>${jbundle-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.jbundle.base.db</groupId>
      <artifactId>org.jbundle.base.db.jdbc</artifactId>
      <version>${jbundle-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.jbundle.base.db</groupId>
      <artifactId>org.jbundle.base.db.client</artifactId>
      <version>${jbundle-version-range}</version>
    </dependency>
    <dependency>
      <groupId>org.jbundle.base.db</groupId>
      <artifactId>org.jbundle.base.db.serial</artifactId>
      <version>${jbundle-version-range}</version>
    </dependency>
	<dependency>
	    <groupId>org.apache.derby</groupId>
	    <artifactId>derby</artifactId>
	    <scope>test</scope>
	</dependency>
  </dependencies>

</project>
