/****************************************************************
	Module: BK_COMP_MENU
	Top Level Logic: MENU_LOGIC
	Date: 14-Aug-91
	Program Revision: 0.00
	S/G Revision: 0.00
****************************************************************/

%include "FIO.IN";

/****************************************************************
	BK_COMP_MENU
	Logic for menu programs
****************************************************************/

%replace BK_COMP_MENU_1 by 455;
BK_COMP_MENU:
   procedure;
%include "BK_COMP_MENU.DD";

declare		END_SELECT_AND_RUN   bit (1);
declare		ERROR_CODE           fixed binary (15);
declare		NOT_FIRST_TIME       bit (1);
   call INITIALIZE;
   END_SELECT_AND_RUN = NO;
   do while (END_SELECT_AND_RUN ^= YES);
      call SELECT_AND_RUN;
   end;
   call END_PROGRAM;
return;

/****************************************************************
	INITIALIZE
	Initialize the program
****************************************************************/

INITIALIZE:
	procedure;


   /* INIT_FILE_VARS - Initialize the file variables */


   /* INIT_PROG_VARS - INITIALIZE THE PROGRAM VARIABLES */

   NOT_FIRST_TIME = "0"b;

   /* DISPLAY_SCREEN - Display the screen */

   call OPEN_SCREEN;
   call DISPLAY_SCREEN (BK_COMP_MENU_1);

   /* OPEN_FILES - Open all the files for this program */

   call SET_SCREEN_VARS (byteaddr (BK_COMP_MENU_RECORD) );
return;
end;	/* INITIALIZE           */

/****************************************************************
	SELECT_AND_RUN
	Select option and run
****************************************************************/

SELECT_AND_RUN:
	procedure;

declare		INPUT_LENGTH         fixed binary (15);
declare		RETURN_CODE          fixed binary (15);

   /* REDIS_AND_SET - Redisplay the screen and set the var ptr */

   if NOT_FIRST_TIME then
      do;
      call DISPLAY_SCREEN (BK_COMP_MENU_1);

      /* SET_SCRN_VARS - Set the screen variables pointer */

      call SET_SCREEN_VARS (byteaddr (BK_COMP_MENU_RECORD) );
      end;
   NOT_FIRST_TIME = YES;

   /* INPUT_OPTION - Input the option on the screen */

   call INPUT_FIELD (  1,INPUT_LENGTH,RETURN_CODE);
   if (BK_COMP_SELECT = 0) !
        (RETURN_CODE ^= NORMAL_RETURN) then
      do;
      END_SELECT_AND_RUN = YES;
      return;
      end;

   /* CALL_PROGRAM - Dispatch to the right program */

   declare BK_HOTEL_MAINT entry;
   declare BK_HOTEL_PRICE entry;
   declare BK_HOTEL_MEAL entry;
   declare BK_LAND_MAINT entry;
   declare BK_ITIN_MAINT entry;
   declare BK_LAND_PRICE entry;
   declare BK_LAND_IT_TO entry;
   declare BK_TRANS_MAINT entry;
   declare BK_TRAN_PRICE entry;
   declare BK_HOTEL_RPT entry;
   declare BK_LAND_RPT entry;
   declare BK_TRANS_RPT entry;
   declare BK_HCAT_MAINT entry;
   do case (BK_COMP_SELECT);
         /* Option   1 */
      call BK_HOTEL_MAINT(
);
         /* Option   2 */
      call BK_HOTEL_PRICE(
);
         /* Option   3 */
      call BK_HOTEL_MEAL(
);
         /* Option   4 */
      call BK_LAND_MAINT(
);
         /* Option   5 */
      call BK_ITIN_MAINT(
);
         /* Option   6 */
      call BK_LAND_PRICE(
);
         /* Option   7 */
      call BK_LAND_IT_TO(
);
         /* Option   8 */
      call BK_TRANS_MAINT(
);
         /* Option   9 */
      call BK_TRAN_PRICE(
);
         /* Option  10 */
      call BK_HOTEL_RPT(
);
         /* Option  11 */
      call BK_LAND_RPT(
);
         /* Option  12 */
      call BK_TRANS_RPT(
);
         /* Option  13 */
      call BK_HCAT_MAINT(
);
   end;
   otherwise
      do;
      end;
return;
end;	/* SELECT_AND_RUN       */

/****************************************************************
	END_PROGRAM
	End of program stuff
****************************************************************/

END_PROGRAM:
	procedure;


   /* CLOSE_FILES - Close all the files for this program */

return;
end;	/* END_PROGRAM          */
end;	/* END_PROGRAM          */
/*********************************End of Program*********************/
