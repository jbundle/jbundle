/****************************************************************
	Module: AM_AGCY_COUNT
	Top Level Logic: AGCY_COUNT_LOGIC
	Date: 27-Dec-92
	Program Revision: 0.00
	S/G Revision: 0.00
****************************************************************/

%include "FIO.IN";

/****************************************************************
	AM_AGCY_COUNT
	Top Level
****************************************************************/

%replace AM_AGCY_COUNT_1 by 920;
AM_AGCY_COUNT:
   procedure;
%replace AM_AGCY_NO by  10;
%replace BK_BOOKING_NO by   9;
%replace BK_TOUR_NO by  34;
%replace BK_TOUR_HDR_NO by  58;
%include "AM_AGCY.DD";
%include "BK_BOOKING.DD";
%include "BK_TOUR.DD";
%include "BK_TOUR_HDR.DD";

declare		ERROR_CODE           fixed binary (15);
declare		END_AGCY_COUNT_ALL   bit (1);
   call INITIALIZE;
   call AGCY_COUNT_MAIN;
   call END_PROGRAM;
return;

/****************************************************************
	INITIALIZE
	Initialize the program
****************************************************************/

INITIALIZE:
	procedure;


   /* INIT_FILE_VARS - Initialize the file variables */

   BK_MODIFICATION = 0;
   BOOKING_NO = 0;
   BK_FOC = 0;
   BK_DEPARTED = "N";
   BK_ORDER_CURR = "N";
   BK_PRINT_INV = "Y";
   BK_REMARK_MOD = 0;
   BK_HOTEL_UINV = "N";
   BK_LAND_UINV = "N";
   BK_AIR_UINV = "N";
   BK_AMOUNT_PAID = 0;
   TOUR_QUADS = 0;
   HDR_TOUR_DESC2 = "";
   HDR_START_ON = 0;
   HDR_END_ON = 0;
   HDR_DEF_RATE = "F";
   HDR_DEF_CLASS = "S ";
   HDR_DEF_CUTOFF = 0;
   HDR_UPGRADE_AGCY = "A";
   HDR_INIT_STATUS = "OK";

   /* INIT_PROG_VARS - INITIALIZE THE PROGRAM VARIABLES */


   /* DISPLAY_SCREEN - Display the screen */

   call OPEN_SCREEN;
   call DISPLAY_SCREEN (AM_AGCY_COUNT_1);

   /* OPEN_FILES - Open all the files for this program */

   call OPEN_FILE (AM_AGCY_NO,"AM_AGCY",byteaddr(AM_AGCY_RECORD),ERROR_CODE);
   if ERROR_CODE ^= 0 then call OPEN_ERROR (AM_AGCY_NO,ERROR_CODE);
   call OPEN_FILE (BK_BOOKING_NO,"BK_BOOKING",byteaddr(BK_BOOKING_RECORD),ERROR_CODE);
   if ERROR_CODE ^= 0 then call OPEN_ERROR (BK_BOOKING_NO,ERROR_CODE);
   call OPEN_FILE (BK_TOUR_NO,"BK_TOUR",byteaddr(BK_TOUR_RECORD),ERROR_CODE);
   if ERROR_CODE ^= 0 then call OPEN_ERROR (BK_TOUR_NO,ERROR_CODE);
   call OPEN_FILE (BK_TOUR_HDR_NO,"BK_TOUR_HDR",byteaddr(BK_TOUR_HDR_RECORD),ERROR_CODE);
   if ERROR_CODE ^= 0 then call OPEN_ERROR (BK_TOUR_HDR_NO,ERROR_CODE);
return;
end;	/* INITIALIZE           */

/****************************************************************
	AGCY_COUNT_MAIN
	Main Logic
****************************************************************/

AGCY_COUNT_MAIN:
	procedure;


   /* SET_FIRST - Set the record pointer to the first rec */

   AGENCY_NUMBER = 0;
   call SET_POSITION (AM_AGCY_NO,KEY_AREA_1,ERROR_CODE);
   END_AGCY_COUNT_ALL = NO;
   do while (END_AGCY_COUNT_ALL ^= YES);
      call AGCY_COUNT_ALL;
   end;
return;
end;	/* AGCY_COUNT_MAIN      */

/****************************************************************
	AGCY_COUNT_ALL
	Read thru
****************************************************************/

AGCY_COUNT_ALL:
	procedure;


   /* READ_NEXT - Read the next record */

   call READ_NEXT (AM_AGCY_NO,KEY_AREA_1,ERROR_CODE);
   if ERROR_CODE > 3 then
   	call PRINT_ERROR (AM_AGCY_NO,ERROR_CODE);

   /* CHECK_END - Check to see if this is the last record */

   if (ERROR_CODE = END_OF_FILE) then
      do;
      END_AGCY_COUNT_ALL = YES;
      return;
      end;

   /* UPDATE_RECORD - Update the record */

   call UPDATE_RECORD (AM_AGCY_NO,ERROR_CODE);
return;
end;	/* AGCY_COUNT_ALL       */

/****************************************************************
	END_PROGRAM
	End of program stuff
****************************************************************/

END_PROGRAM:
	procedure;


   /* CLOSE_FILES - Close all the files for this program */

   call CLOSE_FILE (AM_AGCY_NO);
   call CLOSE_FILE (BK_BOOKING_NO);
   call CLOSE_FILE (BK_TOUR_NO);
   call CLOSE_FILE (BK_TOUR_HDR_NO);
return;
end;	/* END_PROGRAM          */
end;	/* END_PROGRAM          */
/*********************************End of Program*********************/
