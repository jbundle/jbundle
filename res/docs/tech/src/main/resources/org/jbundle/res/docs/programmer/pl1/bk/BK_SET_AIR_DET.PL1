/****************************************************************
	Module: BK_SET_AIR_DET
	Top Level Logic: BK_SETUP_AIR
	Date: 17-Apr-90
	Program Revision: 0.00
	S/G Revision: 0.00
****************************************************************/

%include "FIO.IN";

/****************************************************************
	BK_SET_AIR_DET
	Set up the booking air detail from hdr.
****************************************************************/

%replace BK_SET_AIR_DET_1 by 327;
BK_SET_AIR_DET:
   procedure(
      BK_BOOKING_RECORD,
      BK_TOUR_RECORD,
      BK_TOUR_HDR_RECORD,
      TK_DETAIL_RECORD,
      TK_HEADER_RECORD);
%replace BK_BOOKING_NO by   9;
%replace BK_TOUR_NO by  34;
%replace BK_TOUR_HDR_NO by  58;
%replace TK_DETAIL_NO by  57;
%replace TK_HEADER_NO by  56;
%include "BK_SET_AIR_DET.DD";
%include "BK_BOOKING.DD";
%include "BK_TOUR.DD";
%include "BK_TOUR_HDR.DD";
%include "TK_DETAIL.DD";
%include "TK_HEADER.DD";

declare		END_SETUP_DETAIL     bit (1);
declare		ERROR_CODE           fixed binary (15);
declare		KEY_NO               fixed binary (15);
declare		ALT_OPT_INDEX        fixed binary (15);
declare		SET_ALT_ANSW         fixed binary (15);
declare		SET_ALT_OPT          fixed binary (15);

   /* SET_AIR_MOD - Set the air mod code */

   BK_AIR_MOD = BK_NEXT_MOD;


   /* INIT_AIR_DET - Initialize the fields for air detail */

   NEXT_TEMP_SEQ = 1;

   TK_FIRST_DATE = 32767;


   /* SCAN_ALT_OPT - Go through the selected alt & opt 1 by 1 */

   SET_ALT_OPT = 1;
   ALT_OPT_INDEX = 1;
   do while (SET_ALT_OPT ^= 0);
      SET_ALT_OPT = BK_ALT_OPT_SQ(ALT_OPT_INDEX);
      SET_ALT_ANSW = BK_AO_ANSW_SQ(ALT_OPT_INDEX);
      if SET_ALT_OPT ^= 0 then
         do;
         ALT_OPT_INDEX = ALT_OPT_INDEX + 1;

         /* INIT_LOGIC - Initialize for the read */


         /* NEXT_AIR_DET - Set up for the next Alt?Opt */

         BK_TEMP_ALT_SEQ = SET_ALT_OPT;
         BK_TEMP_ANSW_SEQ = SET_ALT_ANSW;
         BK_TEMP_DAY = 0;
         BK_TEMP_TIME = 0;


         /* XFER_LOGIC - Logic to transfer the records */


         /* SETUP_AIR - Setup the air detail */

            END_SETUP_DETAIL = NO;
            do while (END_SETUP_DETAIL ^= YES);
               call SETUP_DETAIL;
            end;
            call SETUP_AIR_HDR;
         end;
   end;

return;

/****************************************************************
	SETUP_DETAIL
	Set up the air detail records
****************************************************************/

SETUP_DETAIL:
	procedure;

declare		ERROR_TK_DETAIL      fixed binary (15);

   /* SET_FIRST - Set the record pointer to the first rec */

   TK_DET_MOD = -1;
   TK_DET_TR_CODE = HDR_TOUR_CODE;
   TK_DET_ALT_SEQ = BK_TEMP_ALT_SEQ;
   TK_DET_ANSW_SEQ = BK_TEMP_ANSW_SEQ;
   TK_DATE = BK_TEMP_DAY;
   TK_SEQ = BK_TEMP_TIME;
   call SET_POSITION (TK_DETAIL_NO,KEY_AREA_1,ERROR_CODE);

   /* READNEXT - Read the next record */

   call READ_NEXT (TK_DETAIL_NO,KEY_AREA_1,ERROR_CODE);
   if ERROR_CODE > 3 then
   	call PRINT_ERROR (TK_DETAIL_NO,ERROR_CODE);

   /* CHECK_END - Check to see if this is the last record */

   if (ERROR_CODE = END_OF_FILE) !
   (TK_DET_MOD > -1) !
   (TK_DET_TR_CODE > HDR_TOUR_CODE) !
   (TK_DET_ALT_SEQ > BK_TEMP_ALT_SEQ) !
   (TK_DET_ANSW_SEQ > BK_TEMP_ANSW_SEQ) then
      do;
      END_SETUP_DETAIL = YES;
      return;
      end;

   /* SET_TEMP_TO_CUR - Set temp fields to the current rec. */

   BK_TEMP_DAY = TK_DATE;
   BK_TEMP_TIME = TK_SEQ;


   /* SETUP_AIR_KEY - Set up the air header for a read */

   TK_DET_MOD = 0;
   TK_DET_BK_TK = BOOKING_NO;
   TK_DET_ALT_SEQ = 0;
   TK_DET_ANSW_SEQ = 0;
   TK_DATE = BK_DEPARTURE + TK_DAY - 1;

   TK_DETAIL_MODULE = HDR_TOUR_CODE;


   /* DEL_AIR_COPY - Delete the original if not "A"dd */

   if BK_TEMP_ALT_SEQ ^= BK_ALT_OPT_SQ(1) then
      if (TK_DET_MOD_CODE = "R") ! (TK_DET_MOD_CODE = "D") then
         do;

         /* DEL_AIR_REC - Delete the air record */


            /* READ_RECORD - Read the record */

            call READ_KEYED (TK_DETAIL_NO,KEY_AREA_1,ERROR_TK_DETAIL);
            if ERROR_TK_DETAIL > 3 then
               call PRINT_ERROR (TK_DETAIL_NO,ERROR_TK_DETAIL);

            /* DELETE_RECORD - Delete the record */

            call DELETE_RECORD (TK_DETAIL_NO,ERROR_CODE);

            /* SET_DKEY_AIR - Set up the old air key */

            TK_DET_MOD = -1;
            TK_DET_TR_CODE = HDR_TOUR_CODE;
            TK_DET_ALT_SEQ = BK_TEMP_ALT_SEQ;
            TK_DET_ANSW_SEQ = BK_TEMP_ANSW_SEQ;
            TK_DATE = BK_TEMP_DAY;
            TK_SEQ = BK_TEMP_TIME;
            KEY_NO = 1;

            /* READ_RECORD - Read the record */

            call READ_KEYED (TK_DETAIL_NO,KEY_AREA_1,ERROR_TK_DETAIL);
            if ERROR_TK_DETAIL > 3 then
               call PRINT_ERROR (TK_DETAIL_NO,ERROR_TK_DETAIL);

            /* SETUP_AIR_KEY - Set up the air header for a read */

            TK_DET_MOD = 0;
            TK_DET_BK_TK = BOOKING_NO;
            TK_DET_ALT_SEQ = 0;
            TK_DET_ANSW_SEQ = 0;
            TK_DATE = BK_DEPARTURE + TK_DAY - 1;

            TK_DETAIL_MODULE = HDR_TOUR_CODE;

         end;


   /* ADD_AIR_REC - Add the record if not delete */

   if TK_DET_MOD_CODE ^= "D" then
      do;
      ERROR_CODE = KEY_ALREADY_EXISTS;
      do while (ERROR_CODE = KEY_ALREADY_EXISTS);

         /* WRITE_RECORD - Write the record */

         call WRITE_RECORD (TK_DETAIL_NO,ERROR_CODE);
         if ERROR_CODE = KEY_ALREADY_EXISTS then
            TK_SEQ = TK_SEQ + 1;
      end;
      if TK_DATE < TK_FIRST_DATE then
         TK_FIRST_DATE = TK_DATE;

      /* SET_AIR_UINV - Set the air inventory if used */

      if TK_INV = "Y" then
         BK_AIR_UINV = "Y";

      end;


   /* SET_NEXT_AIR - Set the temp fields for the next read */

   BK_TEMP_TIME = BK_TEMP_TIME + 1;

return;
end;	/* SETUP_DETAIL         */

/****************************************************************
	SETUP_AIR_HDR
	Set up the air header for write
****************************************************************/

SETUP_AIR_HDR:
	procedure;

declare		ERROR_TK_HEADER      fixed binary (15);

   /* SETUP_TOUR_HDR - Set up to read the tour header */

   TK_MODIFICATION = -1;
   TK_TOUR_HDR = HDR_TOUR_CODE;
   TK_ALT_SEQ = BK_TEMP_ALT_SEQ;
   TK_ANSW_SEQ = BK_TEMP_ANSW_SEQ;
   KEY_NO = 1;

   /* READ_HDR - Read in the ticket header record */

   call READ_KEYED (TK_HEADER_NO,KEY_NO,ERROR_TK_HEADER);
   if ERROR_TK_HEADER > 3 then
      call PRINT_ERROR (TK_HEADER_NO,ERROR_TK_HEADER);

   /* CHECK_AIR_READ - Check to make sure the header was read */

   if ERROR_TK_HEADER = RECORD_NOT_FOUND then
   return;


   /* SETUP_BK_HDR - Set the key to the booking no. for write */

   TK_MODIFICATION = 0;
   TK_BK_TK_NO = BOOKING_NO;
   TK_ALT_SEQ = 0;
   TK_ANSW_SEQ = 0;
   KEY_NO = 1;

   /* DEL_AIRH_COPY - Delete the original if not "A"dd */

   if BK_TEMP_ALT_SEQ ^= BK_ALT_OPT_SQ(1) then
      if (TK_MOD_CODE = "D") ! (TK_MOD_CODE = "R") then
         do;

         /* DEL_AIRH_REC - Delete the air header record */


            /* READ_HDR - Read in the ticket header record */

            call READ_KEYED (TK_HEADER_NO,KEY_NO,ERROR_TK_HEADER);
            if ERROR_TK_HEADER > 3 then
               call PRINT_ERROR (TK_HEADER_NO,ERROR_TK_HEADER);

            /* DELETE_AIRH - Delete the air header record */

            call DELETE_RECORD (TK_HEADER_NO,ERROR_CODE);

            /* SETUP_TOUR_HDR - Set up to read the tour header */

            TK_MODIFICATION = -1;
            TK_TOUR_HDR = HDR_TOUR_CODE;
            TK_ALT_SEQ = BK_TEMP_ALT_SEQ;
            TK_ANSW_SEQ = BK_TEMP_ANSW_SEQ;
            KEY_NO = 1;

            /* READ_HDR - Read in the ticket header record */

            call READ_KEYED (TK_HEADER_NO,KEY_NO,ERROR_TK_HEADER);
            if ERROR_TK_HEADER > 3 then
               call PRINT_ERROR (TK_HEADER_NO,ERROR_TK_HEADER);

            /* SETUP_BK_HDR - Set the key to the booking no. for write */

            TK_MODIFICATION = 0;
            TK_BK_TK_NO = BOOKING_NO;
            TK_ALT_SEQ = 0;
            TK_ANSW_SEQ = 0;
            KEY_NO = 1;
         end;


   /* INIT_TK_DATE - Set the ticket departure date */

   TK_BK_DEP_DATE = TOUR_DEP_DATE;
   if TK_FIRST_DATE = 32767 then
      TK_DEP_DATE = TOUR_DEP_DATE;
   else
      TK_DEP_DATE = TK_FIRST_DATE;


   /* SET_TK_GL - Set the G/L accounts for a ticket */

   TK_COAS_GL = HDR_AIR_GL;
   TK_OVER_REC = HDR_OVERRIDE_GL;
   TK_PP_TICKETS = HDR_PP_TIC_GL;
   TK_OVER_VAR = HDR_OVER_VAR_GL;


   /* ADD_AIRH_REC - Add the air header record */

   if TK_MOD_CODE ^= "D" then
      do;

      /* WRITE_HDR - Write the booking header */

      call WRITE_RECORD (TK_HEADER_NO,ERROR_CODE);
      end;

return;
end;	/* SETUP_AIR_HDR        */
end;	/* SETUP_AIR_HDR        */
/*********************************End of Program*********************/
