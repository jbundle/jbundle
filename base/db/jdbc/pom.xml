<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jbundle.base.db</groupId>
    <artifactId>jbundle-base-db-reactor</artifactId>
    <version>1.0.1</version>
  </parent>

  <artifactId>org.jbundle.base.db.jdbc</artifactId>
  <packaging>bundle</packaging>
  <name>jbundle-base-db-jdbc - Jdbc database</name>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <!-- Even though I shouldn't expose jdbc, I need to see it for my package lookup -->
            <Export-Package>
            	org.jbundle.base.db.jdbc;version=${project.version},
            	org.jbundle.base.db.jdbc.service.*;version=${project.version}
            </Export-Package>
            <Private-Package>
            	org.jbundle.base.db.jdbc.*,
            </Private-Package>
            <Import-Package>
            	*;resolution:=optional,
                com.mysql.jdbc;resolution:=optional, <!-- Why doesn't this happen automatically? -->
                com.mysql.jdbc.jdbc2.optional;resolution:=optional,
                org.apache.derby.jdbc;resolution:=optional,
                org.osgi.framework;resolution:=optional, <!-- I Don't explicitly reference this, but I need to check to see if this exists to enable OSGi -->
			    org.jbundle.util.osgi.*;resolution:=optional, <!-- This allows me to start it once I deploy it -->
            </Import-Package>
            <Bundle-Activator>org.jbundle.base.db.jdbc.service.JdbcBundleActivator</Bundle-Activator>
            <Bundle-Version>${project.version}</Bundle-Version>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>

    <dependency>
      <groupId>org.jbundle.config.dep</groupId>
      <artifactId>jbundle-config-dep-main</artifactId>
      <version>${jbundle-version-range}</version>
	  <type>pom</type>
    </dependency>
    
    <dependency>     <!-- **** NOTE: These should be 'runtime' dependencies! Fix your code ***** -->
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
	<dependency>
	    <groupId>org.apache.derby</groupId>
	    <artifactId>derby</artifactId>
	</dependency>

	<dependency>
      <groupId>org.jbundle.util.osgi.wrapped</groupId>
      <artifactId>org.jbundle.util.osgi.wrapped.c3p0</artifactId>
      <version>0.9.1.2</version>
	</dependency>

    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <scope>provided</scope> <!-- This better be provided -->
    </dependency>
    <dependency>
      <groupId>org.jbundle.util.osgi</groupId>
      <artifactId>org.jbundle.util.osgi</artifactId>
    </dependency>
  </dependencies>

<licenses>
  <license>
    <name>GNU Library or Lesser General Public License (LGPL)</name>
    <url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
    <comments>This bundle copies the c2p0 jar and adds an OSGi manifest.</comments>
  </license>
</licenses>

</project>
