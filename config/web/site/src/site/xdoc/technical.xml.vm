<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <properties>
    <title>Welcome</title>
    <author email="don@tourgeek.com">Don Corley</author>
  </properties>
  <body>
    <section name="JBundle - Under the covers">
      <p>
        JBundle is an open-source framework for writing applications for the Internet. It is designed for
        interactive real-time applications. It is very careful to stay within the restrictive environment
        of the most hostile environment known to man, the corporate desktop.
      </p>
      <p>
        It is very difficult to write a web application not pose a security risk to your computer.
        How many simple applications start by asking for access to your machine. You can guarantee
        that when OSGi comes to the desktop, it will have a similar security model. I am very careful to
        stay in the sandbox.
      </p>
      <p>
        At it's core, JBundle is a framework for writing real-time data-based applications. Whether you
        are writing a client, server, messaging (soa), or web application, you use this same framework.
      </p>
      <p>
        Data - The data access is very simple just a few calls to read, write, etc. Where JBundle is different
        is in conflict resolution. When you try to write that data that was just updated by someone else your
        data has the power to figure out what the resulting data looks like.
      </p>
      <p>
        Messaging - To give the use a real-time experience, update messages are passed around, intelligently 
        filtered and delivered to the client for processing.
      </p>
      <p>
        Display - Using MVC model JBundle renders and displays the same screen in a web application, a web page, or
        an ajax application.
      </p>
      <p>
        A buddy of mine told me every good developer has to eat his own dog food.
        I never understood why, but I do it anyway!
        <img src="images/dogfood.jpg" alt=""/>
      </p>
    </section>
	<section name="Project Names">
      <p>
        The maven project names describe the function of the sub-project.<br/>
        Projects are kept as small as possible.<br/>
      </p>
      <p>
        The following project names suffixes describe the type of project.
      </p>
      <p>
		-root - Project/repository root
		<br />
		-parent - Configuration only root
		<br />
		-core - Base package code
		<br />
		-misc - Mixed packages code
		<br />
		-other - Mixed packages code (in addition to other packages)
		<br />
		-mixed - Mixed virtual packages (to be bundled in -shell projects)
		<br />
		-shell - Bundle only package
		<br />
		-config - non-code project
		<br />
		-dep - Dependency project
	  </p>
	</section>
  </body>
</document>

